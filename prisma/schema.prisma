// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Enterprise {
  id        Int      @id @default(autoincrement())
  name      String
  cnpj      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users   User[] // Uma empresa tem vários usuários
  clients Client[] // Uma empresa tem vários clientes

  @@map("enterprise")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id           Int        @id @default(autoincrement())
  name         String
  email        String     @unique
  password     String
  enterpriseId Int
  role         UserRole   @default(USER)
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Client {
  id           Int        @id @default(autoincrement())
  name         String
  email        String
  debt         Float      @default(0) // Boa prática: já deixar default 0
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
  accounts     Accounts[] // Nome no plural também

  @@map("client")
}

model Accounts {
  id          Int    @id @default(autoincrement())
  description String
  debt        Float
  clientId    Int
  client      Client @relation(fields: [clientId], references: [id])

  @@map("accounts")
}
